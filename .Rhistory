tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls
?debug
?solve
getwd()
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
?debug
undebug(ls)
makeCacheMatrix
mat <- matrix(c(1, 1, 1, 1, 0, 1, 1, 1, 1), nrow 3, ncol 2)
mat <- matrix(c(1, 1, 1, 1, 0, 1, 1, 1, 1), nrow=3, ncol=2)
mat <- matrix(c(1, 1, 1, 1, 0, 1, 1, 1, 1), nrow=3, ncol=3)
mat
mat <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow=3, ncol=3)
mat
makeCacheMatrix(mat)
undebug
quit()
undebug(makeCacheMatrix)
check.for.traces()
undebug(ls)
q
x(1:9)
c(1:9)
mat <- matrix(c(1:9))
mat
mat <- matrix(c(1:9), nrow=3, ncol=3)
mat
makeCacheMatrix(mat)
cacheSolve(mat)
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat)
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat)
makeCacheMatrix(mat)
cacheSolve(mat)
mat$get()
mat
mm <- makeCacheMatrix(mat)
mm$get()
cacheSolve(m)
cacheSolve(mm)
cacheSolve(m)
M <- cbind(c(1,0,1),c(0,1,2),c(0,0,1))
m = makeCacheMatrix(M)
m$get()
cacheSolve(m)
cacheSolve(m)
cacheSolve(makeCacheMatrix(M))
debugSource('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(M))
cacheSolve(makeCacheMatrix(M))
cacheSolve(makeCacheMatrix(M))
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(M)
makeCacheMatrix(M)
aa< -makeCacheMatrix(M)
aa <- makeCacheMatrix(M)
aa
cacheSolve(aa)
cacheSolve(aa)
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Antonio/git/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?rpois
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?set.seed
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
?rpois
rnorm
?rnorm
?pnorm
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
?rep
x
e
y
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
?summaryRprof()
summaryRprof()
?Rprof
system.time()
?system.time
getwd()
setwd("C:/Users/Antonio/git")
getwd()
mkdir(ProgrammingAssignment3)
dir.create(ProgrammingAssignment3)
install.packages("swirl")
swirl
library(swirl)
swirl
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3300]
x[3000]
x[C(-2,-10)]
x[C(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2,
| norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <-
| c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix
my_matrix2 <- matrix(4 ,5 , 1:20)
my_matrix2 <- matrix(1:20 4 ,5)
my_matrix2 <- matrix(1:20, 4 ,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly","Sean")
cbind(patients, my_matrix)
my_data <-
| data.frame(patients, my_matrix)
my_data < data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
my_data.colnames(cnames)
?colnames
colnames(my_data) <- cnames
my_data
TRUE == YTUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5== 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
clas(shape_mat)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
heaD(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
getwd()
setwd(C:/Users/Antonio/git/ProgrammingAssignment3)
setwd("C:/Users/Antonio/git/ProgrammingAssignment3")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
?read.csv
ncol(outcome)
names(outcome)
outcome <- read.csv("outcome-of-care-measures.csv")
hist(outcome[, 11])
hist(as.numeric(outcome[, 11]))
tapply(outcome[,11],outcome$State, max)
tapply(outcome[,11],outcome$State, unique)
outcome[,outcome$State == 'WV')
outcome[,outcome$State == 'WV']
outcome[outcome$State == 'WV']
outcome[outcome$State == 'WV',]
outcome$State == 'WV'
outcome[outcome$State == 'WV']
outcome[,outcome$State == 'WV']
outcome[outcome$State == 'WV',]
table(outcome$State)
x = "CA"
is.element(x,outcome$State)
x = "res"
is.element(x,outcome$State)
head(outcome)
head(outcome)
outcome
str(outcome)
names(outcome)
state <- "CA"
state_data <- outcome[outcome$State == state,]
state_data[,17]
min(state_data[,17])
min(as.numeric(state_data[,17])
)
as.numeric(state_data[,17]
)
?as.numeric
state_data[,17]
as.numeric(state_data[,17])
state_data[,17]
state_data[!state_data[,17] == "Not Available",]
state_data[!state_data[,17] == "Not Available",3]
state_data[!state_data[,17] == "Not Available",4]
state_data[!state_data[,17] == "Not Available",5]
names(outcome)
state_data[!state_data[,17] == "Not Available",2]
state_data[!state_data[,17] == "Not Available", 17]
min(state_data[!state_data[,17] == "Not Available", 17])
min(as.numeric(state_data[!state_data[,17] == "Not Available", 17]))
min(as.numeric(as.character(state_data[!state_data[,17] == "Not Available", 17])))
class(state_data[!state_data[,17] == "Not Available", 17]))
class(state_data[!state_data[,17] == "Not Available", 17])
source(best.r)
source(best.R)
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart")
best("TdX", "heart failure")
best("TX", "heart failure")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
state_data[state_data[,11]== 12, 2]
best("TX", "heart attack")
best("TX", "heart failure")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart failure")
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
state_data[,11]
state_data[,11 == 12]
state_data[,11 == 12.0]
mrates <- state_data[!state_data[,11] == "Not Available",11]
mrates
mrates == 12
min(mrates)
min(as.numeric(mrates))
min(as.numeric(as.chracter(mrates)))
min(as.numeric(as.character(mrates)))
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
names(state_data)
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
?min
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
min(as.numeric(as.character(mrates)))
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
submit()
submit()
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
best("MD", "heart attack")
best("MD", "pneumonia")
source('C:/Users/Antonio/git/ProgrammingAssignment3/best.R')
?order
rankhospital("TX", "heart failure", 4)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
submit()
submit()
submit()
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankhospital.R')
unique(outcome$State)
length(unique(outcome$State))
w <- unique(outcome$State)
for(i in w) print(w[i])
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 20)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 20)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
submit()
results <- data.frame()
colnames(results)<-("hospital", "state")
?colnames
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
submit()
rankall("heart attack", 4)
?data.frame
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 4)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 4)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 4)
submit()
submit()
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
?order
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
submit()
head(rankall("heart attack", 20), 10)
rownames
?rownames
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
submit()
submit()
submit()
rankall("heart failure", 10)
tail(rankall("heart failure", 10))
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
submit()
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
submit()
submit()
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"), 10)
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"), 10)
submit()
submit()
source('C:/Users/Antonio/git/ProgrammingAssignment3/rankall.R')
